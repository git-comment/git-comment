=pod

=head1 NAME

    git-comment - Add comments to git commits

=head1 SYNOPSIS

    git comment [-m <msg>] [--amend <comment>] [-c <commit>] [<filepath:line>]
    git comment --delete <comment>
    git comment --help
    git comment --version

=head1 DESCRIPTION

git-comment adds, removes, or amends comments attached to git commits,
without changing the commits themselves.

=head1 OPTIONS

=over 4

=item --amend <comment>

Edit an existing comment. No modifications are made if a commit is
specified but no comment with a given ID attached to the given commit.

=item I<-d> <comment>

Remove a comment

=item I<-h>

Gives a pretty-printed usage of the command

=item I<-m> <msg>, --message=<msg>

Use the provided message instead of prompting for message content

=item --version

Print the current version number

=item I<-c> <commit>, --commit <commit>

A commit

=item <filepath:line>

A reference to a file and line number, to make the comment more specific

=back

=head1 ENVIRONMENT AND CONFIGURATION

git-comment uses the same editor, author, and pager settings as git. See
I<git-var>(1) for more details.

Default comment content is loaded from a file path specified by
configuration option I<comment.template> or I<$HOME/.gitcommenttemplate>
in that order.

=head1 HOOKS

This command can run pre-comment and post-comment hooks.

=head1 DISCUSSION

Comment objects are blobs containing extra information about a commit
and optionally a changed line within a the commit.

=head1 AUTHOR

git-comment was written and is maintained by Delisa Mason <delisam@acm.org>

=head1 SEE ALSO

I<git-comment-log>(1), I<git-comment-grep>(1), I<git-var>(1)

=head1 COPYRIGHT

Copyright (c) 2015 Delisa Mason <delisam@acm.org>
All rights reserved.

=cut
